openapi: '3.0.2'
info:
  title: Sample Pet Store App
  description: This is a sample server for a pet store.
  version: 1.0.1
paths:
  /products
    get:
      description: Get all the products in the database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                    format: int64
                  product_name:
                    type: string
                  price:
                    type: integer
                    format: int64
  /products/{product_id}
    get:
      description: Get specific details of product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  product_name:
                    type: string
                  glue_type:
                    type: string
                  price:
                    type: integer
                    format: int64
                  amount_stored:
                    type: integer
                    format: int64
                  shelf_life_years:
                    type: integer
                    format: int64
                  volume:
                    type: integer
                    format: int64
                  basket:
                    type: object
  /products
    post:
      description: Add new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                properties:
                  product_name:
                    type: string
                  glue_type:
                    type: string
                  price:
                    type: integer
                    format: int64
                  amount_stored:
                    type: integer
                    format: int64
                  shelf_life_years:
                    type: integer
                    format: int64
                  volume:
                    type: integer
                    format: int64
  /products/{product_id}
    put:
      description: Alter an existing product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  product_name:
                    type: string
                  glue_type:
                    type: string
                  price:
                    type: integer
                    format: int64
                  amount_stored:
                    type: integer
                    format: int64
                  shelf_life_years:
                    type: integer
                    format: int64
                  volume:
                    type: integer
                    format: int64
                  basket:
                    type: object
  /products/{product_id}
    delete:
      description: Delete a existing product and return deleted object
      response:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  product_name:
                    type: string
                  glue_type:
                    type: string
                  price:
                    type: integer
                    format: int64
                  amount_stored:
                    type: integer
                    format: int64
                  shelf_life_years:
                    type: integer
                    format: int64
                  volume:
                    type: integer
                    format: int64
  /users
    get:
      description: Get all the users in the database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                    format: int64
                  first_name:
                    type: string
                  last_name:
                    type: string
                  register_date:
                    type: string
                    format: date
  /users/{user_id}
    get:
      description: Get specific info of a user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  first_name:
                    type: string
                  last_name:
                    type: string
                  register_date:
                    type: string
                    format: date
                  birth_date:
                    type: string
                    format: date
                  email_address:
                    type: string
                    format: email
                  orders:
                    type: array
                    items:
                      type: object
                  product_basket:
                    type: object
  /users/{user_id}
    post:
      description: Add new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                register_date:
                  type: string
                  format: date
                birth_date:
                  type: string
                  format: date
                email_address:
                  type: string
                  format: email
  /users/{user_id}
    put:
      description: Alter an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                register_date:
                  type: string
                  format: date
                birth_date:
                  type: string
                  format: date
                email_address:
                  type: string
                  format: email
  /users/{user_id}
    delete:
      description: Delete an existing user and return deleted object
      response:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    register_date:
                      type: string
                      format: date
                    birth_date:
                      type: string
                      format: date
                    email_address:
                      type: string
                      format: email
  /basket/{user_id}
    get:
      description: Get the basket from a user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                    format: int64
                  user:
                    type: object
                  products:
                    type: array
                      items:
                        type: object
  /basket/{user_id}
    post:
      description: Add product to basket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
  /basket/{user_id}/order
    get:
      description: Orders basket and deletes products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                    format: int64
                  user:
                    type: object
                  products:
                    type: array
                      items:
                        type: object